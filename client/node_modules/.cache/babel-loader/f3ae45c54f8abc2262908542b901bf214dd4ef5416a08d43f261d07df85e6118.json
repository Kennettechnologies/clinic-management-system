{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\clinic management system\\\\client\\\\src\\\\components\\\\pharmacy\\\\PharmacyDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Box, Paper, Typography, Button, CircularProgress, Alert, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton } from '@mui/material';\nimport { Check as CheckIcon, Close as CloseIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PharmacyDashboard = () => {\n  _s();\n  const [prescriptions, setPrescriptions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPrescriptions = async () => {\n      try {\n        const response = await axios.get('/api/prescriptions/pharmacy');\n        setPrescriptions(response.data.data);\n      } catch (err) {\n        setError('Failed to fetch prescriptions');\n      }\n      setLoading(false);\n    };\n    fetchPrescriptions();\n  }, []);\n  const handleUpdateStatus = async (id, status) => {\n    try {\n      await axios.put(`/api/prescriptions/${id}/status`, {\n        status\n      });\n      setPrescriptions(prescriptions.filter(p => p._id !== id));\n    } catch (err) {\n      setError('Failed to update prescription status');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 3,\n      maxWidth: 800,\n      mx: 'auto',\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Pharmacy Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: prescriptions.map(prescription => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: `Patient: ${prescription.patient.name}`,\n          secondary: `Doctor: ${prescription.doctor.name} | Created: ${new Date(prescription.createdAt).toLocaleDateString()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            color: \"primary\",\n            onClick: () => handleUpdateStatus(prescription._id, 'filled'),\n            children: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            color: \"error\",\n            onClick: () => handleUpdateStatus(prescription._id, 'cancelled'),\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, prescription._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(PharmacyDashboard, \"TMTlJREsojfjTDlldNuRkDJbAkE=\");\n_c = PharmacyDashboard;\nexport default PharmacyDashboard;\nvar _c;\n$RefreshReg$(_c, \"PharmacyDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Box","Paper","Typography","Button","CircularProgress","Alert","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","Check","CheckIcon","Close","CloseIcon","jsxDEV","_jsxDEV","PharmacyDashboard","_s","prescriptions","setPrescriptions","loading","setLoading","error","setError","fetchPrescriptions","response","get","data","err","handleUpdateStatus","id","status","put","filter","p","_id","fileName","_jsxFileName","lineNumber","columnNumber","severity","children","sx","maxWidth","mx","mt","variant","gutterBottom","map","prescription","primary","patient","name","secondary","doctor","Date","createdAt","toLocaleDateString","edge","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/clinic management system/client/src/components/pharmacy/PharmacyDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  CircularProgress,\r\n  Alert,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton\r\n} from '@mui/material';\r\nimport { Check as CheckIcon, Close as CloseIcon } from '@mui/icons-material';\r\n\r\nconst PharmacyDashboard = () => {\r\n  const [prescriptions, setPrescriptions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPrescriptions = async () => {\r\n      try {\r\n        const response = await axios.get('/api/prescriptions/pharmacy');\r\n        setPrescriptions(response.data.data);\r\n      } catch (err) {\r\n        setError('Failed to fetch prescriptions');\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchPrescriptions();\r\n  }, []);\r\n\r\n  const handleUpdateStatus = async (id, status) => {\r\n    try {\r\n      await axios.put(`/api/prescriptions/${id}/status`, { status });\r\n      setPrescriptions(prescriptions.filter(p => p._id !== id));\r\n    } catch (err) {\r\n      setError('Failed to update prescription status');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Alert severity=\"error\">{error}</Alert>;\r\n  }\r\n\r\n  return (\r\n    <Paper sx={{ p: 3, maxWidth: 800, mx: 'auto', mt: 4 }}>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Pharmacy Dashboard\r\n      </Typography>\r\n      <List>\r\n        {prescriptions.map((prescription) => (\r\n          <ListItem key={prescription._id}>\r\n            <ListItemText\r\n              primary={`Patient: ${prescription.patient.name}`}\r\n              secondary={`Doctor: ${prescription.doctor.name} | Created: ${new Date(prescription.createdAt).toLocaleDateString()}`}\r\n            />\r\n            <ListItemSecondaryAction>\r\n              <IconButton\r\n                edge=\"end\"\r\n                color=\"primary\"\r\n                onClick={() => handleUpdateStatus(prescription._id, 'filled')}\r\n              >\r\n                <CheckIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                edge=\"end\"\r\n                color=\"error\"\r\n                onClick={() => handleUpdateStatus(prescription._id, 'cancelled')}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PharmacyDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}