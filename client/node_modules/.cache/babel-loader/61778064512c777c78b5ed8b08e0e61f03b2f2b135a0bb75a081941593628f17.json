{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\clinic management system\\\\client\\\\src\\\\components\\\\telemedicine\\\\VideoPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Box, Paper, Typography, IconButton, Button } from '@mui/material';\nimport { Mic, MicOff, Videocam, VideocamOff, CallEnd, ScreenShare, StopScreenShare } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPanel = ({\n  localParticipant,\n  participants,\n  onEndCall\n}) => {\n  _s();\n  var _localParticipant$aud, _localParticipant$vid;\n  const localVideoRef = useRef();\n  const remoteVideoRefs = useRef({});\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [screenTrack, setScreenTrack] = useState(null);\n  useEffect(() => {\n    if (localParticipant) {\n      localParticipant.videoTracks.forEach(track => {\n        track.attach(localVideoRef.current);\n      });\n    }\n    return () => {\n      if (localParticipant) {\n        localParticipant.videoTracks.forEach(track => {\n          track.detach();\n        });\n      }\n    };\n  }, [localParticipant]);\n  useEffect(() => {\n    participants.forEach(participant => {\n      participant.videoTracks.forEach(track => {\n        if (!remoteVideoRefs.current[participant.sid]) {\n          remoteVideoRefs.current[participant.sid] = document.createElement('div');\n          document.getElementById('remote-videos').appendChild(remoteVideoRefs.current[participant.sid]);\n        }\n        track.attach(remoteVideoRefs.current[participant.sid]);\n      });\n    });\n    return () => {\n      participants.forEach(participant => {\n        participant.videoTracks.forEach(track => {\n          track.detach();\n        });\n        if (remoteVideoRefs.current[participant.sid]) {\n          remoteVideoRefs.current[participant.sid].remove();\n          delete remoteVideoRefs.current[participant.sid];\n        }\n      });\n    };\n  }, [participants]);\n  const toggleAudio = async () => {\n    if (localParticipant) {\n      const audioTrack = localParticipant.audioTracks.values().next().value;\n      if (audioTrack) {\n        if (audioTrack.isEnabled) {\n          await audioTrack.disable();\n        } else {\n          await audioTrack.enable();\n        }\n      }\n    }\n  };\n  const toggleVideo = async () => {\n    if (localParticipant) {\n      const videoTrack = localParticipant.videoTracks.values().next().value;\n      if (videoTrack) {\n        if (videoTrack.isEnabled) {\n          await videoTrack.disable();\n        } else {\n          await videoTrack.enable();\n        }\n      }\n    }\n  };\n  const startScreenSharing = async () => {\n    try {\n      const screenStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      const screenTrack = screenStream.getVideoTracks()[0];\n      setScreenTrack(screenTrack);\n      await localParticipant.publishTrack(screenTrack);\n      setIsScreenSharing(true);\n    } catch (err) {\n      console.error('Failed to start screen sharing:', err);\n    }\n  };\n  const stopScreenSharing = async () => {\n    if (screenTrack) {\n      screenTrack.stop();\n      await localParticipant.unpublishTrack(screenTrack);\n      setScreenTrack(null);\n      setIsScreenSharing(false);\n    }\n  };\n  const isAudioEnabled = localParticipant === null || localParticipant === void 0 ? void 0 : (_localParticipant$aud = localParticipant.audioTracks.values().next().value) === null || _localParticipant$aud === void 0 ? void 0 : _localParticipant$aud.isEnabled;\n  const isVideoEnabled = localParticipant === null || localParticipant === void 0 ? void 0 : (_localParticipant$vid = localParticipant.videoTracks.values().next().value) === null || _localParticipant$vid === void 0 ? void 0 : _localParticipant$vid.isEnabled;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      position: 'relative',\n      height: '70vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      ref: localVideoRef,\n      sx: {\n        position: 'absolute',\n        top: 16,\n        right: 16,\n        width: '200px',\n        height: '150px',\n        backgroundColor: 'black',\n        borderRadius: 1,\n        overflow: 'hidden',\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      id: \"remote-videos\",\n      sx: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: 2,\n        p: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'absolute',\n        bottom: 16,\n        left: '50%',\n        transform: 'translateX(-50%)',\n        display: 'flex',\n        gap: 2,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        padding: 1,\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: isAudioEnabled ? 'primary' : 'error',\n        onClick: toggleAudio,\n        children: isAudioEnabled ? /*#__PURE__*/_jsxDEV(Mic, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 39\n        }, this) : /*#__PURE__*/_jsxDEV(MicOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: isVideoEnabled ? 'primary' : 'error',\n        onClick: toggleVideo,\n        children: isVideoEnabled ? /*#__PURE__*/_jsxDEV(Videocam, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 39\n        }, this) : /*#__PURE__*/_jsxDEV(VideocamOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: isScreenSharing ? 'error' : 'primary',\n        onClick: isScreenSharing ? stopScreenSharing : startScreenSharing,\n        children: isScreenSharing ? /*#__PURE__*/_jsxDEV(StopScreenShare, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 40\n        }, this) : /*#__PURE__*/_jsxDEV(ScreenShare, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"error\",\n        startIcon: /*#__PURE__*/_jsxDEV(CallEnd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 32\n        }, this),\n        onClick: onEndCall,\n        children: \"End Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoPanel, \"wHFN7MUGm0G6r3zUwcxHDWA4x+o=\");\n_c = VideoPanel;\nexport default VideoPanel;\nvar _c;\n$RefreshReg$(_c, \"VideoPanel\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Box","Paper","Typography","IconButton","Button","Mic","MicOff","Videocam","VideocamOff","CallEnd","ScreenShare","StopScreenShare","jsxDEV","_jsxDEV","VideoPanel","localParticipant","participants","onEndCall","_s","_localParticipant$aud","_localParticipant$vid","localVideoRef","remoteVideoRefs","isScreenSharing","setIsScreenSharing","screenTrack","setScreenTrack","videoTracks","forEach","track","attach","current","detach","participant","sid","document","createElement","getElementById","appendChild","remove","toggleAudio","audioTrack","audioTracks","values","next","value","isEnabled","disable","enable","toggleVideo","videoTrack","startScreenSharing","screenStream","navigator","mediaDevices","getDisplayMedia","video","getVideoTracks","publishTrack","err","console","error","stopScreenSharing","stop","unpublishTrack","isAudioEnabled","isVideoEnabled","sx","position","height","children","ref","top","right","width","backgroundColor","borderRadius","overflow","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","id","display","flexWrap","gap","p","bottom","left","transform","padding","color","onClick","variant","startIcon","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/clinic management system/client/src/components/telemedicine/VideoPanel.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n    Box,\r\n    Paper,\r\n    Typography,\r\n    IconButton,\r\n    Button\r\n} from '@mui/material';\r\nimport {\r\n    Mic,\r\n    MicOff,\r\n    Videocam,\r\n    VideocamOff,\r\n    CallEnd,\r\n    ScreenShare,\r\n    StopScreenShare\r\n} from '@mui/icons-material';\r\n\r\nconst VideoPanel = ({ localParticipant, participants, onEndCall }) => {\r\n    const localVideoRef = useRef();\r\n    const remoteVideoRefs = useRef({});\r\n    const [isScreenSharing, setIsScreenSharing] = useState(false);\r\n    const [screenTrack, setScreenTrack] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (localParticipant) {\r\n            localParticipant.videoTracks.forEach(track => {\r\n                track.attach(localVideoRef.current);\r\n            });\r\n        }\r\n\r\n        return () => {\r\n            if (localParticipant) {\r\n                localParticipant.videoTracks.forEach(track => {\r\n                    track.detach();\r\n                });\r\n            }\r\n        };\r\n    }, [localParticipant]);\r\n\r\n    useEffect(() => {\r\n        participants.forEach(participant => {\r\n            participant.videoTracks.forEach(track => {\r\n                if (!remoteVideoRefs.current[participant.sid]) {\r\n                    remoteVideoRefs.current[participant.sid] = document.createElement('div');\r\n                    document.getElementById('remote-videos').appendChild(remoteVideoRefs.current[participant.sid]);\r\n                }\r\n                track.attach(remoteVideoRefs.current[participant.sid]);\r\n            });\r\n        });\r\n\r\n        return () => {\r\n            participants.forEach(participant => {\r\n                participant.videoTracks.forEach(track => {\r\n                    track.detach();\r\n                });\r\n                if (remoteVideoRefs.current[participant.sid]) {\r\n                    remoteVideoRefs.current[participant.sid].remove();\r\n                    delete remoteVideoRefs.current[participant.sid];\r\n                }\r\n            });\r\n        };\r\n    }, [participants]);\r\n\r\n    const toggleAudio = async () => {\r\n        if (localParticipant) {\r\n            const audioTrack = localParticipant.audioTracks.values().next().value;\r\n            if (audioTrack) {\r\n                if (audioTrack.isEnabled) {\r\n                    await audioTrack.disable();\r\n                } else {\r\n                    await audioTrack.enable();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleVideo = async () => {\r\n        if (localParticipant) {\r\n            const videoTrack = localParticipant.videoTracks.values().next().value;\r\n            if (videoTrack) {\r\n                if (videoTrack.isEnabled) {\r\n                    await videoTrack.disable();\r\n                } else {\r\n                    await videoTrack.enable();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const startScreenSharing = async () => {\r\n        try {\r\n            const screenStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\r\n            const screenTrack = screenStream.getVideoTracks()[0];\r\n            setScreenTrack(screenTrack);\r\n            await localParticipant.publishTrack(screenTrack);\r\n            setIsScreenSharing(true);\r\n        } catch (err) {\r\n            console.error('Failed to start screen sharing:', err);\r\n        }\r\n    };\r\n\r\n    const stopScreenSharing = async () => {\r\n        if (screenTrack) {\r\n            screenTrack.stop();\r\n            await localParticipant.unpublishTrack(screenTrack);\r\n            setScreenTrack(null);\r\n            setIsScreenSharing(false);\r\n        }\r\n    };\r\n\r\n    const isAudioEnabled = localParticipant?.audioTracks.values().next().value?.isEnabled;\r\n    const isVideoEnabled = localParticipant?.videoTracks.values().next().value?.isEnabled;\r\n\r\n    return (\r\n        <Paper sx={{ position: 'relative', height: '70vh' }}>\r\n            {/* Local video */}\r\n            <Box\r\n                ref={localVideoRef}\r\n                sx={{\r\n                    position: 'absolute',\r\n                    top: 16,\r\n                    right: 16,\r\n                    width: '200px',\r\n                    height: '150px',\r\n                    backgroundColor: 'black',\r\n                    borderRadius: 1,\r\n                    overflow: 'hidden',\r\n                    zIndex: 1\r\n                }}\r\n            />\r\n\r\n            {/* Remote videos */}\r\n            <Box\r\n                id=\"remote-videos\"\r\n                sx={{\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    gap: 2,\r\n                    p: 2\r\n                }}\r\n            />\r\n\r\n            {/* Controls */}\r\n            <Box\r\n                sx={{\r\n                    position: 'absolute',\r\n                    bottom: 16,\r\n                    left: '50%',\r\n                    transform: 'translateX(-50%)',\r\n                    display: 'flex',\r\n                    gap: 2,\r\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                    padding: 1,\r\n                    borderRadius: 2\r\n                }}\r\n            >\r\n                <IconButton\r\n                    color={isAudioEnabled ? 'primary' : 'error'}\r\n                    onClick={toggleAudio}\r\n                >\r\n                    {isAudioEnabled ? <Mic /> : <MicOff />}\r\n                </IconButton>\r\n                <IconButton\r\n                    color={isVideoEnabled ? 'primary' : 'error'}\r\n                    onClick={toggleVideo}\r\n                >\r\n                    {isVideoEnabled ? <Videocam /> : <VideocamOff />}\r\n                </IconButton>\r\n                <IconButton\r\n                    color={isScreenSharing ? 'error' : 'primary'}\r\n                    onClick={isScreenSharing ? stopScreenSharing : startScreenSharing}\r\n                >\r\n                    {isScreenSharing ? <StopScreenShare /> : <ScreenShare />}\r\n                </IconButton>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"error\"\r\n                    startIcon={<CallEnd />}\r\n                    onClick={onEndCall}\r\n                >\r\n                    End Call\r\n                </Button>\r\n            </Box>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default VideoPanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}