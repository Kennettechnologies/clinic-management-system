{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\clinic management system\\\\client\\\\src\\\\components\\\\telemedicine\\\\ChatPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { Box, Paper, Typography, TextField, IconButton, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport { Send } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPanel = ({\n  sessionId,\n  auth\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get(`/api/v1/telemedicine/${sessionId}`);\n        setMessages(response.data.data.chatHistory);\n        scrollToBottom();\n      } catch (err) {\n        console.error('Failed to fetch messages:', err);\n      }\n    };\n    fetchMessages();\n    // Poll for new messages every 5 seconds\n    const interval = setInterval(fetchMessages, 5000);\n    return () => clearInterval(interval);\n  }, [sessionId]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    setLoading(true);\n    try {\n      await axios.post(`/api/v1/telemedicine/${sessionId}/chat`, {\n        message: newMessage\n      });\n      setNewMessage('');\n      // Fetch updated messages\n      const response = await axios.get(`/api/v1/telemedicine/${sessionId}`);\n      setMessages(response.data.data.chatHistory);\n      scrollToBottom();\n    } catch (err) {\n      console.error('Failed to send message:', err);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        borderBottom: 1,\n        borderColor: 'divider'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        flex: 1,\n        overflow: 'auto',\n        p: 2\n      },\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"span\",\n              variant: \"subtitle2\",\n              color: \"text.primary\",\n              children: [message.sender.firstName, \" \", message.sender.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this),\n            secondary: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"span\",\n              variant: \"body2\",\n              color: \"text.primary\",\n              children: message.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            children: new Date(message.timestamp).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), index < messages.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 57\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSendMessage,\n      sx: {\n        p: 2,\n        borderTop: 1,\n        borderColor: 'divider',\n        display: 'flex',\n        gap: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        size: \"small\",\n        placeholder: \"Type a message...\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: loading || !newMessage.trim(),\n        children: /*#__PURE__*/_jsxDEV(Send, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatPanel, \"sh5Y2xshS2lysC+vF730mmoNTVk=\");\n_c = ChatPanel;\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(ChatPanel);\nvar _c;\n$RefreshReg$(_c, \"ChatPanel\");","map":{"version":3,"names":["React","useState","useEffect","useRef","connect","axios","Box","Paper","Typography","TextField","IconButton","List","ListItem","ListItemText","Divider","Send","jsxDEV","_jsxDEV","ChatPanel","sessionId","auth","_s","messages","setMessages","newMessage","setNewMessage","loading","setLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchMessages","response","get","data","chatHistory","err","console","error","interval","setInterval","clearInterval","handleSendMessage","e","preventDefault","trim","post","message","sx","height","display","flexDirection","children","p","borderBottom","borderColor","variant","fileName","_jsxFileName","lineNumber","columnNumber","flex","overflow","map","index","Fragment","alignItems","primary","component","color","sender","firstName","lastName","secondary","Date","timestamp","toLocaleTimeString","length","ref","onSubmit","borderTop","gap","fullWidth","size","placeholder","value","onChange","target","disabled","type","_c","mapStateToProps","state","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/clinic management system/client/src/components/telemedicine/ChatPanel.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n    Box,\r\n    Paper,\r\n    Typography,\r\n    TextField,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Divider\r\n} from '@mui/material';\r\nimport { Send } from '@mui/icons-material';\r\n\r\nconst ChatPanel = ({ sessionId, auth }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const messagesEndRef = useRef(null);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/v1/telemedicine/${sessionId}`);\r\n                setMessages(response.data.data.chatHistory);\r\n                scrollToBottom();\r\n            } catch (err) {\r\n                console.error('Failed to fetch messages:', err);\r\n            }\r\n        };\r\n\r\n        fetchMessages();\r\n        // Poll for new messages every 5 seconds\r\n        const interval = setInterval(fetchMessages, 5000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [sessionId]);\r\n\r\n    const handleSendMessage = async (e) => {\r\n        e.preventDefault();\r\n        if (!newMessage.trim()) return;\r\n\r\n        setLoading(true);\r\n        try {\r\n            await axios.post(`/api/v1/telemedicine/${sessionId}/chat`, {\r\n                message: newMessage\r\n            });\r\n            setNewMessage('');\r\n            // Fetch updated messages\r\n            const response = await axios.get(`/api/v1/telemedicine/${sessionId}`);\r\n            setMessages(response.data.data.chatHistory);\r\n            scrollToBottom();\r\n        } catch (err) {\r\n            console.error('Failed to send message:', err);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <Paper sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n            <Box sx={{ p: 2, borderBottom: 1, borderColor: 'divider' }}>\r\n                <Typography variant=\"h6\">Chat</Typography>\r\n            </Box>\r\n\r\n            <List sx={{ flex: 1, overflow: 'auto', p: 2 }}>\r\n                {messages.map((message, index) => (\r\n                    <React.Fragment key={index}>\r\n                        <ListItem alignItems=\"flex-start\">\r\n                            <ListItemText\r\n                                primary={\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"subtitle2\"\r\n                                        color=\"text.primary\"\r\n                                    >\r\n                                        {message.sender.firstName} {message.sender.lastName}\r\n                                    </Typography>\r\n                                }\r\n                                secondary={\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        color=\"text.primary\"\r\n                                    >\r\n                                        {message.message}\r\n                                    </Typography>\r\n                                }\r\n                            />\r\n                            <Typography variant=\"caption\" color=\"text.secondary\">\r\n                                {new Date(message.timestamp).toLocaleTimeString()}\r\n                            </Typography>\r\n                        </ListItem>\r\n                        {index < messages.length - 1 && <Divider />}\r\n                    </React.Fragment>\r\n                ))}\r\n                <div ref={messagesEndRef} />\r\n            </List>\r\n\r\n            <Box\r\n                component=\"form\"\r\n                onSubmit={handleSendMessage}\r\n                sx={{\r\n                    p: 2,\r\n                    borderTop: 1,\r\n                    borderColor: 'divider',\r\n                    display: 'flex',\r\n                    gap: 1\r\n                }}\r\n            >\r\n                <TextField\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    placeholder=\"Type a message...\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    disabled={loading}\r\n                />\r\n                <IconButton\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={loading || !newMessage.trim()}\r\n                >\r\n                    <Send />\r\n                </IconButton>\r\n            </Box>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(ChatPanel); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}